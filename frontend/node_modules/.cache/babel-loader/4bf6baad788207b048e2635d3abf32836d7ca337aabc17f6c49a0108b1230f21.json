{"ast":null,"code":"var _jsxFileName = \"D:\\\\Press-Pulse\\\\presspulse\\\\src\\\\News.js\",\n  _s = $RefreshSig$();\n// src/News.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst News = ({\n  newspaper,\n  title,\n  url\n}) => {\n  _s();\n  const [headlines, setHeadlines] = useState([]);\n  const proxyUrl = \"http://localhost:3000/proxy?url=\"; // Quoted URL\n\n  useEffect(() => {\n    const fetchHeadlines = async () => {\n      const finalUrl = proxyUrl + encodeURIComponent(url);\n      console.log(\"Fetching from URL: \", finalUrl); // Log the fetch URL\n\n      try {\n        const response = await fetch(finalUrl);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.text();\n        const parser = new DOMParser();\n        const xml = parser.parseFromString(data, 'application/xml');\n        const items = xml.querySelectorAll('item title');\n        let headlinesArray = [];\n        items.forEach(item => {\n          headlinesArray.push(item.textContent);\n        });\n        setHeadlines(headlinesArray.slice(0, 20)); // Top 10 headlines\n      } catch (error) {\n        console.error('Error fetching headlines:', error);\n        setHeadlines(['Unable to load headlines']);\n      }\n    };\n    fetchHeadlines();\n  }, [url]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `news ${newspaper}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upper\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lower\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: headlines.map((headline, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"headline\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"star\",\n              children: \"\\u2605\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 41\n            }, this), \" \", headline]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(News, \"JvxtH8uyPjtpV0PZZNAacoFwcYc=\");\n_c = News;\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","News","newspaper","title","url","_s","headlines","setHeadlines","proxyUrl","fetchHeadlines","finalUrl","encodeURIComponent","console","log","response","fetch","ok","Error","status","data","text","parser","DOMParser","xml","parseFromString","items","querySelectorAll","headlinesArray","forEach","item","push","textContent","slice","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","headline","index","_c","$RefreshReg$"],"sources":["D:/Press-Pulse/presspulse/src/News.js"],"sourcesContent":["// src/News.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst News = ({ newspaper, title, url }) => {\r\n  const [headlines, setHeadlines] = useState([]);\r\n\r\n  const proxyUrl = \"http://localhost:3000/proxy?url=\";  // Quoted URL\r\n\r\n  useEffect(() => {\r\n    const fetchHeadlines = async () => {\r\n      const finalUrl = proxyUrl + encodeURIComponent(url);\r\n      console.log(\"Fetching from URL: \", finalUrl); // Log the fetch URL\r\n\r\n      try {\r\n        const response = await fetch(finalUrl);\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        const data = await response.text();\r\n\r\n        const parser = new DOMParser();\r\n        const xml = parser.parseFromString(data, 'application/xml');\r\n        const items = xml.querySelectorAll('item title');\r\n\r\n        let headlinesArray = [];\r\n        items.forEach(item => {\r\n          headlinesArray.push(item.textContent);\r\n        });\r\n        setHeadlines(headlinesArray.slice(0, 20)); // Top 10 headlines\r\n      } catch (error) {\r\n        console.error('Error fetching headlines:', error);\r\n        setHeadlines(['Unable to load headlines']);\r\n      }\r\n    };\r\n\r\n    fetchHeadlines();\r\n  }, [url]);\r\n\r\n  return (\r\n    <div className={`news ${newspaper}`}>\r\n      <div className=\"upper\">\r\n        <h2>{title}</h2>\r\n      </div>\r\n      <div className=\"lower\">\r\n        <ul>\r\n          {headlines.map((headline, index) => (\r\n            <li key={index}>\r\n              <div className=\"headline\"><span className=\"star\">&#9733;</span> {/* Unicode star character */}\r\n              {headline}</div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default News;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}